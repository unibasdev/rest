plugins {
    id "war"
    id "tomcat"
    id "hibernate"
    id "io.freefair.lombok" version "6.5.1"
}

repositories {
    mavenCentral()
}

dependencies {
    //-------------- Jersey -----------------
    implementation "org.glassfish.jersey.containers:jersey-container-servlet:3.1.2"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:3.1.2"
    implementation "jakarta.inject:jakarta.inject-api:2.0.1"
    implementation "org.glassfish.jersey.core:jersey-server:3.1.2"
    implementation 'org.glassfish.jersey.ext.cdi:jersey-cdi1x:3.1.2'
    implementation 'org.glassfish.jersey.ext.cdi:jersey-cdi1x-servlet:3.1.2'
    implementation 'org.jboss.weld.servlet:weld-servlet-core:4.0.3.Final' //CDI 3.0 - Weld 5.0.0 (CDI 4) richiede JDK >=11
    implementation 'org.glassfish.jersey.ext:jersey-bean-validation:3.1.2'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.2'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2' //4.0.0 richiede JDK >=11
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'
    //--------------  Mapper  -----------------
    implementation 'org.modelmapper:modelmapper:3.1.0'
    //--------------  JWT  -----------------
    implementation 'com.auth0:java-jwt:4.0.0'
    //-------------- Swagger -----------------
    implementation 'io.swagger.core.v3:swagger-jaxrs2-jakarta:2.2.2'
    implementation 'io.swagger.core.v3:swagger-jaxrs2-servlet-initializer-jakarta:2.2.2'
    //-------------- Logging -----------------
    implementation 'org.slf4j:slf4j-api:2.0.1'
    runtimeOnly 'ch.qos.logback:logback-classic:1.3.1'
    runtimeOnly 'ch.qos.logback:logback-core:1.3.1'
    runtimeOnly 'org.fusesource.jansi:jansi:1.17'
    //--------------  Test  -----------------
    testImplementation 'junit:junit:4.13'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters' << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    testLogging {
        showStandardStreams = true
    }
}
